FileHeader = """
// <auto-generated>
//     This file is generated by a tool.
// </auto-generated>
"""
# (optional) can possibly be inferred from the .toml file path relative to the .csproj file
Namespace = "Genco.Example"
# (optional) can be inferred from the .toml filename without extension
Name = "MyModel"

# can be "class", "struct", "record", "record struct", and "readonly record struct"
# defaults to record
Type = "readonly record struct"

Usings = [
    # (optional) default usings
    "System",
    "System.Collections.Generic",
    "System.Linq",

    # (optional) custom usings
    "Genco.Library"
]

# generate mapping methods that convert an instance of the model
# to and from an IDictionary<string, object?>
# Generate.Mappers.Dictionary = true
# generate mapping methods that convert an instance of the model
# to and from a System.Data.DataTable
# Generate.Mappers.AdoNet = true

# the thought is that we can define several DTO objects to generate types and mappers for
# that has a subset of the main model's properties
#[Generate.DTO]

# [RecordParameterList]
# Id = {Type = "int", Attributes = "Required, Range(0, 100)"}

#[Constructor]

# [Properties.Name]
# Type = "string?"
# Setter = "init"
# Attributes = "MaxLength(0xff)"

# [Properties.CreatedAt]
# Type = "DateTime"
# #Setter
# DefaultValue = "DateTime.Now"