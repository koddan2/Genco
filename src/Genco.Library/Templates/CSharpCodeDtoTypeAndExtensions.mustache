{{#Dtos}}
    // CSharpCodeDtoTypeAndExtensions
    public {{ModelTypeSyntax}} {{DtoNameSyntax}}
    {
        {{#Properties}}
        public {{PropertyTypeNullableSyntax}} {{PropertyName}} { get; set; }
        {{/Properties}}
    }
    public static class {{DtoNameSyntax}}MappingExtensions
    {
        public static {{DtoNameSyntax}} To{{Suffix}}(this {{ModelTypeName}} instance)
        {
            var result = new {{DtoNameSyntax}}();
            {{#Properties}}
            result.{{PropertyName}} = instance.{{PropertyName}};
            {{/Properties}}
            return result;
        }
        public static {{ModelTypeName}} ToModel(this {{DtoNameSyntax}} dto)
        {
            var obj = RuntimeHelpers.GetUninitializedObject(
                {{ModelTypeName}}Meta.ModelType);
            var result = ({{ModelTypeName}})obj;
            {{#Properties}}
            // result.{{PropertyName}} = dto.{{PropertyName}};
            {{ModelTypeName}}Meta.Property_{{PropertyName}}.SetValue(result, dto.{{PropertyName}});
            {{/Properties}}
            return result;
        }
    }
{{/Dtos}}