FileHeader = """
// <auto-generated>
//     This file is generated by a tool.
// </auto-generated>
"""

FileHeaderInclude = "./MIT.license.include.cs"

# (optional) can possibly be inferred from the .toml file path relative to the .csproj file
Namespace = "Genco.Test.Example"
# (optional) can be inferred from the .toml filename without extension
Name = "MyMoreComplexModel"

# can be "class", "struct", "record", "record struct", "readonly record struct"
# but also, if the type should be abstract or partial, it can be added here too,
# e.g. "abstract class" or "partial record" &c.
# defaults to "record"
Type = "partial record"

Usings = [
    # (optional) default usings
    "System",
    "System.Collections.Generic",
    "System.Linq",

    # (optional) custom usings
    "System.Data",
    "System.ComponentModel.DataAnnotations",
    "RangeAttribute = System.ComponentModel.DataAnnotations.RangeAttribute"
]

CustomCode = """
    public enum Status
    {
        Unknown,
        Ok,
        Intermediate,
        Problematic,
    }
"""

[Generate.Mappers]
# generate mapping methods that convert an instance of the model
# to and from an IDictionary<string, object?>
Dictionary = true
# generate mapping methods that convert an instance of the model
# to and from a System.Data.DataTable
# requires a reference to the System.Data.Common assembly, and "System.Data" in Usings
AdoNet = true

# the idea is that we can define several DTO objects to generate types and mappers for
# that has a subset of the main model's properties
#[Generate.DTO]

[Record]
ParameterList = [
    { Name = "Id", Type = "int", Attributes = [
        "Required",
        "Range(0, 100)",
    ] },
    { Name = "Important", Type = "bool", DefaultValue = "true" },
]

#[Constructor]

[Properties.Name]
Type = "string?"
Setter = "init"
Attributes = "MaxLength(0xff)"

[Properties.CreatedAt]
Type = "DateTime"
#Setter
DefaultValue = "DateTime.Now"

[Properties.Status]
Type = "Status"
Setter = "set"
DefaultValue = "Status.Ok"

[Properties.ExternalReference]
Type = "Guid?"
Setter = "set"